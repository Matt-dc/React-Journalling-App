{"ast":null,"code":"import _defineProperty from \"/home/matt/Desktop/React-Journalling-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/matt/Desktop/React-Journalling-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/matt/Desktop/React-Journalling-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/matt/Desktop/React-Journalling-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/matt/Desktop/React-Journalling-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/matt/Desktop/React-Journalling-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/matt/Desktop/React-Journalling-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/matt/Desktop/React-Journalling-App/client/src/components/Post.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Button, Row, Col, Form, FormControl, Container, InputGroup } from 'react-bootstrap'; //remember to import CSS styles CDN from React-bootstrap\n// import { Editor } from '@tinymce/tinymce-react';\n\nimport './styles/post.css';\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Posts, _Component);\n\n  function Posts(props) {\n    var _this;\n\n    _classCallCheck(this, Posts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this, props));\n\n    _this.handleEditorChange = function (e) {\n      _this.setState({\n        input: e.target.getContent()\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState(_defineProperty({}, e.target.name, [e.target.value]));\n\n      _this.setState(function (prevState) {\n        return {\n          posts: prevState.posts.concat(prevState.post)\n        };\n      });\n    };\n\n    _this.state = {\n      input: '',\n      posts: [],\n      now: new Date().getTime()\n    };\n    _this.handleEditorChange = _this.handleEditorChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Posts, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"full-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"top-banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"post-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"What's on your mind?\"))), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"text-editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        className: \"input-title\",\n        \"aria-label\": \"Large\",\n        placeholder: \"Title\",\n        \"aria-describedby\": \"inputGroup-sizing-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Editor, {\n        init: {\n          plugins: 'link image code',\n          toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code'\n        } //  onChange={this.handleEditorChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"submit-post\",\n        type: \"submit\",\n        onSubmit: this.handleSubmit,\n        variant: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Post\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.now), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"  \", this.state.posts.map(function (post) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, post);\n      })), this.state.input)));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\nexport { Posts as default };","map":{"version":3,"sources":["/home/matt/Desktop/React-Journalling-App/client/src/components/Post.js"],"names":["React","Component","BrowserRouter","Router","Route","Button","Row","Col","Form","FormControl","Container","InputGroup","Posts","props","handleEditorChange","e","setState","input","target","getContent","handleSubmit","preventDefault","name","value","prevState","posts","concat","post","state","now","Date","getTime","bind","plugins","toolbar","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Button, Row, Col, Form, FormControl, Container, InputGroup } from 'react-bootstrap'; //remember to import CSS styles CDN from React-bootstrap\n// import { Editor } from '@tinymce/tinymce-react';\nimport './styles/post.css'\n\n\nexport default class Posts extends Component {\n\n      constructor(props) {\n        super(props);\n\n        this.state = {\n          input: '',\n          posts: [],\n          now: new Date().getTime()\n        }\n\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n      }\n\n      handleEditorChange =(e) => {\n        this.setState({\n          input: e.target.getContent()\n        });\n      }\n\n      handleSubmit = e => {\n        e.preventDefault();\n        this.setState({ [e.target.name]: [e.target.value] });\n\n\n        this.setState(prevState => ({\n          posts: prevState.posts.concat(prevState.post)\n        }));\n      }\n\n\n  render(){\n\n    return (\n\n      <div>\n\n        <Container className=\"full-background\">\n        <Row className=\"top-banner\">\n        <div>\n          <h1 className=\"post-title\">What's on your mind?</h1>\n        </div>\n        </Row>\n\n        <Form onSubmit={this.handleSubmit} className=\"text-editor\">\n            <Form.Group>\n                <Form.Control className=\"input-title\" aria-label=\"Large\" placeholder=\"Title\" aria-describedby=\"inputGroup-sizing-sm\" />\n            </Form.Group>\n\n            <Form.Group>\n              <Editor\n                 init={{\n                     plugins: 'link image code',\n                     toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code' }}\n                //  onChange={this.handleEditorChange}\n                 />\n\n              <Button className=\"submit-post\" type=\"submit\" onSubmit={this.handleSubmit} variant=\"success\">Post</Button>\n            </Form.Group>\n            </Form>\n\n          <Row>\n            {this.state.now}\n          </Row>\n\n          <Row>\n          <p>  {this.state.posts.map(post => {\n                return (\n                  <li>{post}</li>\n                );\n            })}\n          </p>\n          {this.state.input}\n          </Row>\n\n        </Container>\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}